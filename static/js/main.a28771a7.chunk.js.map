{"version":3,"sources":["api/api.ts","db/userLoginData.ts","constants/reducers.ts","reducers/auth-reducer.ts","constants/routes.ts","constants/history.ts","db/getResults.ts","constants/responseTypes.ts","sagas/saga.tsx","reducers/store.ts","Components/SignIn/blocksForm/Copyright.tsx","css/materialStyles.ts","Components/SignIn/blocksForm/renderFields.tsx","utils/validators/validator.ts","Components/SignIn/SignInForm.tsx","Components/SignIn/SignIn.tsx","css/styled.ts","Components/Table/Table.tsx","reducers/tableDataSelectors.ts","common/Preloader/Preloader.tsx","constants/classNames.ts","Components/Table/TableComponent.tsx","Components/Table/TableContainer.tsx","routes/appRoutes.ts","Components/App/App.tsx","Components/App/AppContainer.tsx","serviceWorker.ts","index.tsx"],"names":["mock","MockAdapter","axios","authAPI","dataLogin","email","password","onPost","params","reply","JWT","type","name","SET_USER_DATA","SIGN_IN","SET_TOKEN","SET_TABLE_DATA","GET_TABLE","SET_ERROR","initialState","employed","isAuth","title","table","login","response","arrayResponse","Object","values","post","length","authReducer","state","action","value","localStorage","setItem","alert","CALCULATION_TABLE","createBrowserHistory","getCalculationResults","data","calculationResults","ERROR","signInAsync","getTable","watchSignIn","token","put","history","push","dataTable","takeLatest","reducers","combineReducers","form","formReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","flexGrow","rootAvatar","display","alignItems","rootPreloader","width","marginTop","spacing","paper","flexDirection","avatar","margin","backgroundColor","palette","secondary","main","submit","large","height","renderTextField","label","input","meta","invalid","error","touched","custom","TextField","required","fullWidth","placeholder","helperText","renderCheckbox","FormControlLabel","control","Checkbox","checked","onChange","isRequired","reduxForm","handleSubmit","classes","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","Field","id","autoComplete","validate","autoFocus","Button","Grid","container","item","xs","Box","mt","connect","dispatch","props","Title","styled","h4","Wrapper","section","TableResult","sm","zeroMinWidth","Table","TableHead","TableRow","TableCell","dataTitle","map","cell","key","TableBody","row","onClick","alt","src","img","aria-label","count","price","cost","Icon","fontSize","getDataTable","getDataTitle","Preloader","LinearProgress","DEL_ROW","MUI_TABLE","BACKGROUND_NONE","BACKGROUND_BLOCK","DISPLAY_BLOCK","DISPLAY_NONE","TableContainer","handleClick","event","currentTarget","parentElement","style","correntRow","firstElementChild","lastElementChild","this","Component","getItem","TableComponent","React","AppRoutes","path","SignIn","exact","withRouter","route","AppContainer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a28771a7.chunk.js","sourcesContent":["import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport {IFormData} from '../entities/ISignIn/ISignInProps';\nimport {LOGIN, PASSWORD} from '../db/userLoginData';\n\n//используем заглушку mock для имитации отпрвки/получения данных с сервера\nconst mock = new MockAdapter(axios);\n\n//функция authAPI отправляет POST-запрос на сервер с данными, которые ввел пользователь,\n//возвращает JWT-токен при успешной авторизации или ERROR\nexport const authAPI = {\n  login(dataLogin: IFormData){ \n    if ((dataLogin.email !== LOGIN)\n      &&(dataLogin.password !== PASSWORD))\n      return mock.onPost('/login', { params: dataLogin })\n        .reply(200, {\n          JWT: [\n            { type: 'error',\n              name: 'неверная пара логин - пароль'\n            }\n          ]\n        }); \n    else\n      return mock.onPost('/login', { params: dataLogin })\n        .reply(200, {\n          JWT: [\n            { type: 'jwt',\n              name: '86fasfgfsogHGad' \n            }\n          ]\n        });\n  }\n}\n","//данные для авторизации\nexport const LOGIN = \"front@end.ru\";\nexport const PASSWORD = \"123\";","export const SET_USER_DATA = 'SET_USER_DATA';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const FILL_TABLE = 'FILL_TABLE';\nexport const SET_TABLE_DATA = 'SET_TABLE_DATA';\nexport const GET_TABLE = 'GET_TABLE';\nexport const SET_ERROR = 'SET_ERROR';\n","import {authAPI} from '../api/api';\nimport {IFormData} from '../entities/ISignIn/ISignInProps';\nimport {IAction} from '../entities/IActions/IActions';\nimport {ITable} from '../entities/IActions/ITable';\nimport {SET_USER_DATA, SET_TOKEN, SET_TABLE_DATA, SET_ERROR} from '../constants/reducers';\n\nlet initialState = {\n    email: '',\n    password: '',\n    employed: false,\n    isAuth: false,\n    title: [],\n    table: []\n};\n\nconst authReducer = (state = initialState, action: IAction&ITable) => {\n    const values = action.value;\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                email: values.email,\n                password: values.password,\n                isAuth: true,\n                employed: values.employed||false\n            }\n        case SET_TOKEN: {\n            localStorage.setItem('JWT', action.value.name );\n            return state;}\n        case SET_TABLE_DATA: {\n            return {\n                ...state,\n                title: action.value[0].title,\n                table: action.value[1].table\n            }\n        }\n        case SET_ERROR: {\n            alert (action.value);\n            return state;\n        }\n        default:\n            return state;\n    }\n}\n\nexport const login = (dataLogin: IFormData) =>\n{\n    const response = authAPI.login(dataLogin); //ответ от сервера\n\n    //получили от сервера массив со всеми попытка ввода пароля, в том числе неправильными\n    const arrayResponse = Object.values(response)[0].post;\n    const lengthResponse = arrayResponse.length;\n\n    //достаем из массива последний ответ\n    const currentResponse = arrayResponse[lengthResponse-1];\n    const result = currentResponse[4].JWT[0];\n\n    return result;\n}\n\nexport default authReducer;\n","export const LOGIN = '/';\nexport const CALCULATION_TABLE = '/table';\n","import {createBrowserHistory} from \"history\";\n\nexport default createBrowserHistory({});\n","import data from './data.json';\n\n//получаем данные для заполнения таблицы из json-файла\nexport const getCalculationResults = () => {\n    const dataCalculationResults = data.calculationResults;    \n    return dataCalculationResults;\n}","export const ERROR = 'error';\nexport const JWT = 'jwt';","import {takeLatest, put} from 'redux-saga/effects';\nimport {SIGN_IN, SET_USER_DATA, SET_TOKEN, GET_TABLE, SET_TABLE_DATA, SET_ERROR}\n    from '../constants/reducers';\nimport {CALCULATION_TABLE} from '../constants/routes';\nimport {login} from '../reducers/auth-reducer';\nimport history from '../constants/history';\nimport {getCalculationResults} from '../db/getResults';\nimport {ERROR, JWT} from '../constants/responseTypes';\n\nfunction* signInAsync(values:any) {\n    const token = yield login(values.values);\n     \n    if (token.type === ERROR) {\n        yield put({type: SET_ERROR, value: token.name});\n    } else if (token.type === JWT) {        \n        yield put({type: SET_USER_DATA, value: values.values});\n        yield put({type: SET_TOKEN, value: token});\n        history.push(CALCULATION_TABLE);\n    }    \n}\n\nfunction* getTable() {\n    const dataTable = yield getCalculationResults(); \n    yield put({type: SET_TABLE_DATA, value: dataTable});    \n}\n\nexport function* watchSignIn() {\n    yield takeLatest(SIGN_IN, signInAsync);\n    yield takeLatest(GET_TABLE, getTable);\n}\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport authReducer from './auth-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport {watchSignIn} from '../sagas/saga';\nimport {reducer as formReducer} from 'redux-form';\n\nconst reducers = combineReducers({\n   authReducer: authReducer,\n   form: formReducer\n})\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(watchSignIn);\n\nexport default store;\n","import React, {FC} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst Copyright: FC = () => {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"\">\n          Ваш сайт\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \nexport default Copyright;","import {makeStyles} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n   root: {\n    flexGrow: 1,\n  },\n  rootAvatar:{\n    display: 'flex',\n    alignItems: 'center',\n  },\n  rootPreloader: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  table: {\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n","import React from 'react';\nimport {IField, ITextField} from '../../../entities/IForms/IForms';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport const renderTextField: React.FC<ITextField> = ({\n    label,\n    input,\n    meta: { invalid, error, touched },\n    ...custom\n  }) => (\n    <TextField\n      required\n      fullWidth    \n      label={label}\n      placeholder={label}\n      error={touched && invalid}\n      helperText={touched && error}    \n      {...input}\n      {...custom}\n    />\n  )\n  \nexport  const renderCheckbox: React.FC<IField> = ({ \n    input, \n    label \n  }) => (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={input.value ? true : false}\n            onChange={input.onChange}\n          />\n        }\n        label={label}\n      />\n    </div>\n  )","export const isRequired = (value: boolean) => {\n    if (value)\n      return undefined;\n    return 'Поле обязательно для заполнения';\n}\n","import React, {FC} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {ISignInProps} from '../../entities/ISignIn/ISignInProps';\nimport {reduxForm, InjectedFormProps, Field} from 'redux-form';\nimport {connect} from 'react-redux';\nimport Copyright from './blocksForm/Copyright';\nimport {useStyles} from '../../css/materialStyles';\nimport {renderTextField, renderCheckbox} from './blocksForm/renderFields';\nimport {isRequired} from '../../utils/validators/validator';\n\n\nconst SignInForm: FC<ISignInProps & InjectedFormProps<{}, ISignInProps>> = ({handleSubmit}) => {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход в аккаунт\n        </Typography>\n        <form onSubmit={handleSubmit} className={classes.form}>\n          <Field\n            name=\"email\"\n            component={renderTextField}\n            label=\"Почта\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            id=\"email\"\n            autoComplete=\"email\"\n            validate={isRequired}\n            autoFocus\n\n          />\n          <Field\n            name=\"password\"\n            component={renderTextField}\n            label=\"Пароль\"\n            type=\"password\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            id=\"password\"\n            validate={isRequired}\n          />\n          <Field\n            color=\"primary\"\n            name=\"employed\"\n            component={renderCheckbox}\n            label=\"Запомнить меня\"\n            value=\"remember\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Войти в аккаунт\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Забыли пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Еще нет аккаунта? Регистрация\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nconst form = reduxForm<{}, ISignInProps>({form: 'login'})(SignInForm);\n\nexport default connect(null)(form);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport SignInForm from './SignInForm';\nimport {ISignInProps} from '../../entities/ISignIn/ISignInProps';\nimport {SIGN_IN} from '../../constants/reducers';\n \nconst SignIn = (props: ISignInProps) => \n{\n  const handleSubmit = (values: any) => {    \n    props.login(values);\n  }\n  return (\n    <SignInForm onSubmit={handleSubmit}/>\n  )\n}\n\nconst mapDispachToProps = (dispatch: any) => {\n  return {\n    login: (values: any) => dispatch({ type: SIGN_IN, values: values })\n  };\n};\n\nexport default connect(null, mapDispachToProps)(SignIn);\n","import styled from 'styled-components';\n\nexport const Title = styled.h4`\n    font-size: 1.5em;\n    text-align: left;\n    color: #DC143C;\n    border-bottom: 2px solid #c8c9cb;\n    padding-bottom: 1em;\n`;\n\nexport const Table = styled.table`\n    width: 100%;\n`;\n\nexport const Wrapper = styled.section`\n   padding: 1.5em;\n   width: 100%;\n\n   table thead th {\n      background-color: #e8e9eb;\n   }\n\n   .delRow {\n      opacity: .9;\n      cursor: pointer;\n   }\n\n   .addRow {\n      display: none;\n   }\n\n   .fa-times-circle:hover {\n      color: gray;\n   }\n\n   .MuiAvatar-root {\n       border: 1px solid #c8c9cb;\n       width: 1.3em;\n       height: 1.3em;\n       margin: auto;\n   }\n\n   input.inputTable:disabled {\n      background-color: white;\n   }\n\n   input.inputTable {\n      border: 0px;\n      text-align: center;\n   }\n\n   td, th {\n      border-left: 1px solid #c8c9cb;\n      border-top: 1px solid #c8c9cb;\n   }\n\n   tbody tr:focuse {\n      background: #edeef0;\n   }\n   tr {\n      border-right: 1px solid #c8c9cb;\n      border-butom: 1px solid #c8c9cb;\n      border-top: 1px solid #c8c9cb;\n   }\n\n   @media screen and (max-width: 500px) {\n      .cellBlock {\n         text-align: right;\n      }\n      .MuiAvatar-root{\n         width: 100px;\n         height: 100px;\n      }\n      table thead, .IcoClear {\n         display: none;\n      }\n      td span {\n         margin: auto;\n      }\n\n      table tr {\n         display: block;\n         max-width: 500px;\n         margin-bottom: 1.5em;\n      }\n\n      tbody tr:hover {\n         background: white;\n      }\n\n      table th {\n         display: block;\n         text-align: center;\n      }\n      table td {\n         display: flex;\n         text-align: right;\n         padding: 0;\n         padding-right: 10px;\n      }\n\n      table td:before {\n         width: 100px;\n         display: flex;\n         content: attr(aria-label);\n         font-weight: bold;\n         background-color: #e8e9eb;\n         padding: 10px;\n      }\n   }\n`;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport Avatar from '@material-ui/core/Avatar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport {IRow} from '../../entities/IForms/IForms';\nimport {useStyles} from '../../css/materialStyles';\nimport {Title, Wrapper} from '../../css/styled';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\n\nconst TableResult = (props: any) =>\n{\n   const classes = useStyles();\n\n   return (\n      <Grid container item sm={12} zeroMinWidth>\n         <Wrapper>\n            <Title>Результаты расчета</Title>\n            <Table className={classes.table}>\n               <TableHead>\n                  <TableRow>\n                     <TableCell></TableCell>\n                     {props.dataTitle.map((cell: string)=> (\n                        <TableCell key={cell} >\n                           <span>{cell}</span>\n                        </TableCell>\n                     ))}\n                     <TableCell></TableCell>\n                  </TableRow>\n               </TableHead>\n               <TableBody>\n                  {props.dataTable.map((row: IRow) => (\n                     <TableRow key={row.id} onClick={props.onClick}>\n                        <TableCell component=\"th\" align=\"center\">\n                           <Avatar alt={row.name} src={row.img} />\n                        </TableCell>\n                        <TableCell aria-label={props.dataTitle[0]}>\n                           <span>{row.name}</span>\n                        </TableCell>\n                        <TableCell aria-label={props.dataTitle[1]}\n                                    align=\"center\">\n                           <span>{row.count}</span>\n                        </TableCell>\n                        <TableCell  aria-label={props.dataTitle[2]}\n                                    align=\"center\">\n                           <span>{row.price}</span>\n                        </TableCell>\n                        <TableCell  aria-label={props.dataTitle[3]}\n                                    align=\"center\">\n                           <span>{row.cost}</span>\n                        </TableCell>\n                        <TableCell align=\"center\" className=\"IcoClear\">\n                           <div onClick={props.onClick} className=\"delRow\">\n                              <Icon className=\"fa fa-times-circle\"\n                                    fontSize=\"small\" color=\"disabled\"\n                              />\n                           </div>\n                           <div className=\"addRow\">\n                              <Icon className=\"fa fa-plus-circle\" color=\"secondary\"\n                                    fontSize=\"small\"\n                               />\n                           </div>\n                        </TableCell>\n                     </TableRow>\n                  ))}\n               </TableBody>\n            </Table>\n         </Wrapper>\n      </Grid>\n   );\n}\n\nexport default TableResult;\n","import {ITable} from '../entities/IActions/ITable';\n\nexport const getDataTable= (state: ITable) => { \n    return state.authReducer.table;\n};\n\nexport const getDataTitle = (state: ITable) => {\n    return state.authReducer.title;\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {useStyles} from '../../css/materialStyles';\n\nconst Preloader = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress />\n      <LinearProgress color=\"secondary\" />\n    </div>\n  );\n}\n\nexport default Preloader;\n","export const DEL_ROW = \"delRow\";\nexport const MUI_TABLE = \"MuiTableRow-root\";\nexport const BACKGROUND_NONE = \"rgb(255, 255, 255)\";\nexport const BACKGROUND_BLOCK = \"rgb(237, 238, 240)\";\nexport const DISPLAY_BLOCK = \"block\";\nexport const DISPLAY_NONE = \"none\";\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Table from './Table';\nimport {ITable, ITableProps} from '../../entities/IActions/ITable';\nimport {getDataTable, getDataTitle} from '../../reducers/tableDataSelectors';\nimport Preloader from '../../common/Preloader/Preloader';\nimport {DEL_ROW, MUI_TABLE, BACKGROUND_NONE,\n        BACKGROUND_BLOCK, DISPLAY_BLOCK, DISPLAY_NONE} from '../../constants/classNames';\n\nclass TableContainer extends Component<ITableProps>\n{\n   handleClick = (event: any) => {\n      if (event!=null && event.currentTarget.className === DEL_ROW){\n         const correntRow = event.currentTarget.parentElement.parentElement;\n         correntRow.style.display = DISPLAY_NONE;\n      }\n      else if (event!=null && event.currentTarget.className === MUI_TABLE){\n         const correntRow = event.currentTarget;\n         const firstElementChild = event.currentTarget.lastElementChild.firstElementChild;\n         const lastElementChild = event.currentTarget.lastElementChild.lastElementChild;\n\n         if (correntRow.style.backgroundColor !== BACKGROUND_BLOCK) {\n            correntRow.style.backgroundColor = BACKGROUND_BLOCK;\n            firstElementChild.style.display = DISPLAY_NONE;\n            lastElementChild.style.display = DISPLAY_BLOCK;\n         }\n         else {\n            correntRow.style.backgroundColor = BACKGROUND_NONE;\n            firstElementChild.style.display = DISPLAY_BLOCK;\n            lastElementChild.style.display = DISPLAY_NONE;\n         }\n      }\n   };\n\n   render(){\n      if (!this.props)\n         return <Preloader />\n      return <Table dataTable={this.props.table}\n                   dataTitle={this.props.title}\n                   onClick={this.handleClick}\n             />\n    }\n}\n\nconst mapStateToProps = (state: ITable) => ({\n    table: getDataTable(state),\n    title: getDataTitle(state)\n});\n\nexport default connect(mapStateToProps)(TableContainer);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {GET_TABLE} from '../../constants/reducers';\nimport {IProps, ITableProps} from '../../entities/IActions/ITable';\nimport TableComponent from './TableComponent';\nimport Preloader from '../../common/Preloader/Preloader';\n\nclass TableContainer extends React.Component<ITableProps, IProps> {\n    constructor(props: ITableProps) {\n        super(props);\n        props.getTable();\n    }\n\n    render(){         \n         if (!!localStorage.getItem('JWT'))\n            return <TableComponent props={this.props}/>\n         else\n            return <Preloader />\n    }\n}\n\nconst mapDispachToProps = (dispatch: any) => {\n   return {\n      getTable: (values: any) => dispatch({ type: GET_TABLE, values: values })\n   };\n};\n\nexport default connect(null, mapDispachToProps)(TableContainer);\n","import {LOGIN, CALCULATION_TABLE} from '../constants/routes';\nimport SignIn from '../Components/SignIn/SignIn';\nimport Table from '../Components/Table/TableContainer';\nimport {IAppRoute} from './../entities/IApp/IAppRoute';\n\nexport const AppRoutes: IAppRoute[] =\n[\n    {\n        path: LOGIN,\n        component: SignIn,\n        exact: true\n    },\n    {\n        path: CALCULATION_TABLE,\n        component: Table,\n        exact: true\n    }\n];\n","import React, { FC } from 'react';\nimport {Route, Switch, Router, withRouter} from \"react-router-dom\";\nimport history from '../../constants/history';\nimport {AppRoutes} from '../../routes/appRoutes';\nimport {IAppRoute} from '../../entities/IApp/IAppRoute';\n\nconst App: FC = () => \n{\n   return (\n      <Router history={history}>\n         <div>\n            <Switch>\n            {\n               AppRoutes.map((route: IAppRoute) => (\n                  <Route exact={route.exact}\n                        path={route.path}\n                        component={route.component}\n                        key={route.path} \n                  />\n               ))\n            }\n            </Switch>\n         </div>\n      </Router>\n   )   \n}\n\nexport default withRouter(App);\n","import React, {FC} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from '../../reducers/store';\nimport {Provider} from 'react-redux';\nimport App from './App';\n\nconst AppContainer: FC = () => \n{\n    return <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n}\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './Components/App/AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}